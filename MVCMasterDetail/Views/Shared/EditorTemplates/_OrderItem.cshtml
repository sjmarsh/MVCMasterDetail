@model MVCMasterDetail.Models.OrderItem

<tr id="OrderItem">
    @using (Html.BeginCollectionItem("OrderItems"))
    {
        <td>
            <!--Need hidden field for model binding: ref:  http://haacked.com/archive/2008/10/23/model-binding-to-a-list.aspx/-->
            <input type="hidden" name="orderItems.Index" value="@Model.Id" />
        </td>
        <td>
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.EditorFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </td>
        <td>
            <a href="#" class="deleteRow">Delete</a>
        </td>


        @*<div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div >
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-2" >
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div >
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div >
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>


                <a href="#" class="deleteRow col-md-3">Delete</a>
                <br/>
            </div>*@

    }
</tr>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
